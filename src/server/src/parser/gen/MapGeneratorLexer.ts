// Generated from ./src/parser/MapGeneratorLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class MapGeneratorLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly OPEN_CURLY = 2;
	public static readonly CLOSE_CURLY = 3;
	public static readonly OPEN_PAREN = 4;
	public static readonly CLOSE_PAREN = 5;
	public static readonly COMMA = 6;
	public static readonly CHAIN_OP = 7;
	public static readonly EQ = 8;
	public static readonly COORDINATE = 9;
	public static readonly VARIABLE = 10;
	public static readonly CONSTANT = 11;
	public static readonly FUNCTION = 12;
	public static readonly DEFINITIONS = 13;
	public static readonly TO = 14;
	public static readonly FROM = 15;
	public static readonly AT = 16;
	public static readonly HIGHWAY = 17;
	public static readonly STREET = 18;
	public static readonly BRIDGE = 19;
	public static readonly TIMES = 20;
	public static readonly CREATE = 21;
	public static readonly SEMICOLON = 22;
	public static readonly STOP = 23;
	public static readonly TRAIN = 24;
	public static readonly TRAFFIC = 25;
	public static readonly BUS = 26;
	public static readonly SIGN = 27;
	public static readonly LIGHT = 28;
	public static readonly OUTPUT = 29;
	public static readonly END_OUTPUT = 30;
	public static readonly END_DEFINITION = 31;
	public static readonly LOOP = 32;
	public static readonly END_LOOP = 33;
	public static readonly POSITIVE_NUMBER = 34;
	public static readonly NEGATIVE_NUMBER = 35;
	public static readonly OPERATOR = 36;
	public static readonly BUS_STOP = 37;
	public static readonly STOP_SIGN = 38;
	public static readonly TRAFFIC_LIGHT = 39;
	public static readonly TRAIN_STOP = 40;
	public static readonly NAME = 41;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"WS", "OPEN_CURLY", "CLOSE_CURLY", "OPEN_PAREN", "CLOSE_PAREN", "COMMA", 
		"CHAIN_OP", "EQ", "COORDINATE", "VARIABLE", "CONSTANT", "FUNCTION", "DEFINITIONS", 
		"TO", "FROM", "AT", "HIGHWAY", "STREET", "BRIDGE", "TIMES", "CREATE", 
		"SEMICOLON", "STOP", "TRAIN", "TRAFFIC", "BUS", "SIGN", "LIGHT", "OUTPUT", 
		"END_OUTPUT", "END_DEFINITION", "LOOP", "END_LOOP", "POSITIVE_NUMBER", 
		"NEGATIVE_NUMBER", "OPERATOR", "BUS_STOP", "STOP_SIGN", "TRAFFIC_LIGHT", 
		"TRAIN_STOP", "NAME",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, "'{'", "'}'", "'('", "')'", "','", "'.'", "'='", 
		undefined, "'VARIABLE'", "'CONSTANT'", "'FUNCTION'", "'DEFINITIONS'", 
		"'to'", "'from'", "'at'", "'highway'", "'street'", "'bridge'", "'TIMES'", 
		"'CREATE'", "';'", "'stop'", "'train'", "'traffic'", "'bus'", "'sign'", 
		"'light'", "'OUTPUT'", "'END_OUTPUT'", "'END_DEFINITIONS'", "'LOOP'", 
		"'END_LOOP'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "OPEN_CURLY", "CLOSE_CURLY", "OPEN_PAREN", "CLOSE_PAREN", 
		"COMMA", "CHAIN_OP", "EQ", "COORDINATE", "VARIABLE", "CONSTANT", "FUNCTION", 
		"DEFINITIONS", "TO", "FROM", "AT", "HIGHWAY", "STREET", "BRIDGE", "TIMES", 
		"CREATE", "SEMICOLON", "STOP", "TRAIN", "TRAFFIC", "BUS", "SIGN", "LIGHT", 
		"OUTPUT", "END_OUTPUT", "END_DEFINITION", "LOOP", "END_LOOP", "POSITIVE_NUMBER", 
		"NEGATIVE_NUMBER", "OPERATOR", "BUS_STOP", "STOP_SIGN", "TRAFFIC_LIGHT", 
		"TRAIN_STOP", "NAME",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(MapGeneratorLexer._LITERAL_NAMES, MapGeneratorLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return MapGeneratorLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(MapGeneratorLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "MapGeneratorLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return MapGeneratorLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return MapGeneratorLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return MapGeneratorLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return MapGeneratorLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02+\u0134\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x03" +
		"\x02\x06\x02W\n\x02\r\x02\x0E\x02X\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03" +
		"\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03" +
		"\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03" +
		"\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03" +
		"\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03" +
		"\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03 " +
		"\x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"" +
		"\x03\"\x03\"\x03\"\x03\"\x03#\x06#\u0117\n#\r#\x0E#\u0118\x03$\x03$\x03" +
		"$\x03%\x03%\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03" +
		"(\x03(\x03)\x03)\x03)\x03)\x03*\x06*\u0131\n*\r*\x0E*\u0132\x02\x02\x02" +
		"+\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02" +
		")Q\x02*S\x02+\x03\x02\x07\x05\x02\v\f\x0F\x0F\"\"\x03\x02z{\x03\x022;" +
		"\x04\x02--//\x04\x02C\\c|\x02\u0136\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02" +
		"+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x03V\x03\x02\x02\x02\x05\\\x03\x02\x02\x02\x07^\x03\x02\x02\x02" +
		"\t`\x03\x02\x02\x02\vb\x03\x02\x02\x02\rd\x03\x02\x02\x02\x0Ff\x03\x02" +
		"\x02\x02\x11h\x03\x02\x02\x02\x13j\x03\x02\x02\x02\x15l\x03\x02\x02\x02" +
		"\x17u\x03\x02\x02\x02\x19~\x03\x02\x02\x02\x1B\x87\x03\x02\x02\x02\x1D" +
		"\x93\x03\x02\x02\x02\x1F\x96\x03\x02\x02\x02!\x9B\x03\x02\x02\x02#\x9E" +
		"\x03\x02\x02\x02%\xA6\x03\x02\x02\x02\'\xAD\x03\x02\x02\x02)\xB4\x03\x02" +
		"\x02\x02+\xBA\x03\x02\x02\x02-\xC1\x03\x02\x02\x02/\xC3\x03\x02\x02\x02" +
		"1\xC8\x03\x02\x02\x023\xCE\x03\x02\x02\x025\xD6\x03\x02\x02\x027\xDA\x03" +
		"\x02\x02\x029\xDF\x03\x02\x02\x02;\xE5\x03\x02\x02\x02=\xEC\x03\x02\x02" +
		"\x02?\xF7\x03\x02\x02\x02A\u0107\x03\x02\x02\x02C\u010C\x03\x02\x02\x02" +
		"E\u0116\x03\x02\x02\x02G\u011A\x03\x02\x02\x02I\u011D\x03\x02\x02\x02" +
		"K\u011F\x03\x02\x02\x02M\u0123\x03\x02\x02\x02O\u0127\x03\x02\x02\x02" +
		"Q\u012B\x03\x02\x02\x02S\u0130\x03\x02\x02\x02UW\t\x02\x02\x02VU\x03\x02" +
		"\x02\x02WX\x03\x02\x02\x02XV\x03\x02\x02\x02XY\x03\x02\x02\x02YZ\x03\x02" +
		"\x02\x02Z[\b\x02\x02\x02[\x04\x03\x02\x02\x02\\]\x07}\x02\x02]\x06\x03" +
		"\x02\x02\x02^_\x07\x7F\x02\x02_\b\x03\x02\x02\x02`a\x07*\x02\x02a\n\x03" +
		"\x02\x02\x02bc\x07+\x02\x02c\f\x03\x02\x02\x02de\x07.\x02\x02e\x0E\x03" +
		"\x02\x02\x02fg\x070\x02\x02g\x10\x03\x02\x02\x02hi\x07?\x02\x02i\x12\x03" +
		"\x02\x02\x02jk\t\x03\x02\x02k\x14\x03\x02\x02\x02lm\x07X\x02\x02mn\x07" +
		"C\x02\x02no\x07T\x02\x02op\x07K\x02\x02pq\x07C\x02\x02qr\x07D\x02\x02" +
		"rs\x07N\x02\x02st\x07G\x02\x02t\x16\x03\x02\x02\x02uv\x07E\x02\x02vw\x07" +
		"Q\x02\x02wx\x07P\x02\x02xy\x07U\x02\x02yz\x07V\x02\x02z{\x07C\x02\x02" +
		"{|\x07P\x02\x02|}\x07V\x02\x02}\x18\x03\x02\x02\x02~\x7F\x07H\x02\x02" +
		"\x7F\x80\x07W\x02\x02\x80\x81\x07P\x02\x02\x81\x82\x07E\x02\x02\x82\x83" +
		"\x07V\x02\x02\x83\x84\x07K\x02\x02\x84\x85\x07Q\x02\x02\x85\x86\x07P\x02" +
		"\x02\x86\x1A\x03\x02\x02\x02\x87\x88\x07F\x02\x02\x88\x89\x07G\x02\x02" +
		"\x89\x8A\x07H\x02\x02\x8A\x8B\x07K\x02\x02\x8B\x8C\x07P\x02\x02\x8C\x8D" +
		"\x07K\x02\x02\x8D\x8E\x07V\x02\x02\x8E\x8F\x07K\x02\x02\x8F\x90\x07Q\x02" +
		"\x02\x90\x91\x07P\x02\x02\x91\x92\x07U\x02\x02\x92\x1C\x03\x02\x02\x02" +
		"\x93\x94\x07v\x02\x02\x94\x95\x07q\x02\x02\x95\x1E\x03\x02\x02\x02\x96" +
		"\x97\x07h\x02\x02\x97\x98\x07t\x02\x02\x98\x99\x07q\x02\x02\x99\x9A\x07" +
		"o\x02\x02\x9A \x03\x02\x02\x02\x9B\x9C\x07c\x02\x02\x9C\x9D\x07v\x02\x02" +
		"\x9D\"\x03\x02\x02\x02\x9E\x9F\x07j\x02\x02\x9F\xA0\x07k\x02\x02\xA0\xA1" +
		"\x07i\x02\x02\xA1\xA2\x07j\x02\x02\xA2\xA3\x07y\x02\x02\xA3\xA4\x07c\x02" +
		"\x02\xA4\xA5\x07{\x02\x02\xA5$\x03\x02\x02\x02\xA6\xA7\x07u\x02\x02\xA7" +
		"\xA8\x07v\x02\x02\xA8\xA9\x07t\x02\x02\xA9\xAA\x07g\x02\x02\xAA\xAB\x07" +
		"g\x02\x02\xAB\xAC\x07v\x02\x02\xAC&\x03\x02\x02\x02\xAD\xAE\x07d\x02\x02" +
		"\xAE\xAF\x07t\x02\x02\xAF\xB0\x07k\x02\x02\xB0\xB1\x07f\x02\x02\xB1\xB2" +
		"\x07i\x02\x02\xB2\xB3\x07g\x02\x02\xB3(\x03\x02\x02\x02\xB4\xB5\x07V\x02" +
		"\x02\xB5\xB6\x07K\x02\x02\xB6\xB7\x07O\x02\x02\xB7\xB8\x07G\x02\x02\xB8" +
		"\xB9\x07U\x02\x02\xB9*\x03\x02\x02\x02\xBA\xBB\x07E\x02\x02\xBB\xBC\x07" +
		"T\x02\x02\xBC\xBD\x07G\x02\x02\xBD\xBE\x07C\x02\x02\xBE\xBF\x07V\x02\x02" +
		"\xBF\xC0\x07G\x02\x02\xC0,\x03\x02\x02\x02\xC1\xC2\x07=\x02\x02\xC2.\x03" +
		"\x02\x02\x02\xC3\xC4\x07u\x02\x02\xC4\xC5\x07v\x02\x02\xC5\xC6\x07q\x02" +
		"\x02\xC6\xC7\x07r\x02\x02\xC70\x03\x02\x02\x02\xC8\xC9\x07v\x02\x02\xC9" +
		"\xCA\x07t\x02\x02\xCA\xCB\x07c\x02\x02\xCB\xCC\x07k\x02\x02\xCC\xCD\x07" +
		"p\x02\x02\xCD2\x03\x02\x02\x02\xCE\xCF\x07v\x02\x02\xCF\xD0\x07t\x02\x02" +
		"\xD0\xD1\x07c\x02\x02\xD1\xD2\x07h\x02\x02\xD2\xD3\x07h\x02\x02\xD3\xD4" +
		"\x07k\x02\x02\xD4\xD5\x07e\x02\x02\xD54\x03\x02\x02\x02\xD6\xD7\x07d\x02" +
		"\x02\xD7\xD8\x07w\x02\x02\xD8\xD9\x07u\x02\x02\xD96\x03\x02\x02\x02\xDA" +
		"\xDB\x07u\x02\x02\xDB\xDC\x07k\x02\x02\xDC\xDD\x07i\x02\x02\xDD\xDE\x07" +
		"p\x02\x02\xDE8\x03\x02\x02\x02\xDF\xE0\x07n\x02\x02\xE0\xE1\x07k\x02\x02" +
		"\xE1\xE2\x07i\x02\x02\xE2\xE3\x07j\x02\x02\xE3\xE4\x07v\x02\x02\xE4:\x03" +
		"\x02\x02\x02\xE5\xE6\x07Q\x02\x02\xE6\xE7\x07W\x02\x02\xE7\xE8\x07V\x02" +
		"\x02\xE8\xE9\x07R\x02\x02\xE9\xEA\x07W\x02\x02\xEA\xEB\x07V\x02\x02\xEB" +
		"<\x03\x02\x02\x02\xEC\xED\x07G\x02\x02\xED\xEE\x07P\x02\x02\xEE\xEF\x07" +
		"F\x02\x02\xEF\xF0\x07a\x02\x02\xF0\xF1\x07Q\x02\x02\xF1\xF2\x07W\x02\x02" +
		"\xF2\xF3\x07V\x02\x02\xF3\xF4\x07R\x02\x02\xF4\xF5\x07W\x02\x02\xF5\xF6" +
		"\x07V\x02\x02\xF6>\x03\x02\x02\x02\xF7\xF8\x07G\x02\x02\xF8\xF9\x07P\x02" +
		"\x02\xF9\xFA\x07F\x02\x02\xFA\xFB\x07a\x02\x02\xFB\xFC\x07F\x02\x02\xFC" +
		"\xFD\x07G\x02\x02\xFD\xFE\x07H\x02\x02\xFE\xFF\x07K\x02\x02\xFF\u0100" +
		"\x07P\x02\x02\u0100\u0101\x07K\x02\x02\u0101\u0102\x07V\x02\x02\u0102" +
		"\u0103\x07K\x02\x02\u0103\u0104\x07Q\x02\x02\u0104\u0105\x07P\x02\x02" +
		"\u0105\u0106\x07U\x02\x02\u0106@\x03\x02\x02\x02\u0107\u0108\x07N\x02" +
		"\x02\u0108\u0109\x07Q\x02\x02\u0109\u010A\x07Q\x02\x02\u010A\u010B\x07" +
		"R\x02\x02\u010BB\x03\x02\x02\x02\u010C\u010D\x07G\x02\x02\u010D\u010E" +
		"\x07P\x02\x02\u010E\u010F\x07F\x02\x02\u010F\u0110\x07a\x02\x02\u0110" +
		"\u0111\x07N\x02\x02\u0111\u0112\x07Q\x02\x02\u0112\u0113\x07Q\x02\x02" +
		"\u0113\u0114\x07R\x02\x02\u0114D\x03\x02\x02\x02\u0115\u0117\t\x04\x02" +
		"\x02\u0116\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118\u0116" +
		"\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02\u0119F\x03\x02\x02\x02\u011A" +
		"\u011B\x07/\x02\x02\u011B\u011C\x05E#\x02\u011CH\x03\x02\x02\x02\u011D" +
		"\u011E\t\x05\x02\x02\u011EJ\x03\x02\x02\x02\u011F\u0120\x055\x1B\x02\u0120" +
		"\u0121\x05\x03\x02\x02\u0121\u0122\x05/\x18\x02\u0122L\x03\x02\x02\x02" +
		"\u0123\u0124\x05/\x18\x02\u0124\u0125\x05\x03\x02\x02\u0125\u0126\x05" +
		"7\x1C\x02\u0126N\x03\x02\x02\x02\u0127\u0128\x053\x1A\x02\u0128\u0129" +
		"\x05\x03\x02\x02\u0129\u012A\x059\x1D\x02\u012AP\x03\x02\x02\x02\u012B" +
		"\u012C\x051\x19\x02\u012C\u012D\x05\x03\x02\x02\u012D\u012E\x05/\x18\x02" +
		"\u012ER\x03\x02\x02\x02\u012F\u0131\t\x06\x02\x02\u0130\u012F\x03\x02" +
		"\x02\x02\u0131\u0132\x03\x02\x02\x02\u0132\u0130\x03\x02\x02\x02\u0132" +
		"\u0133\x03\x02\x02\x02\u0133T\x03\x02\x02\x02\x06\x02X\u0118\u0132\x03" +
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MapGeneratorLexer.__ATN) {
			MapGeneratorLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(MapGeneratorLexer._serializedATN));
		}

		return MapGeneratorLexer.__ATN;
	}

}

