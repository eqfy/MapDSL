// Generated from ./src/app/parser/MapGeneratorLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class MapGeneratorLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly LINE_COMMENT = 2;
	public static readonly OPEN_CURLY = 3;
	public static readonly CLOSE_CURLY = 4;
	public static readonly OPEN_PAREN = 5;
	public static readonly CLOSE_PAREN = 6;
	public static readonly COMMA = 7;
	public static readonly CHAIN_OP = 8;
	public static readonly EQ = 9;
	public static readonly COORDINATE = 10;
	public static readonly VARIABLE = 11;
	public static readonly CONSTANT = 12;
	public static readonly FUNCTION = 13;
	public static readonly DEFINITIONS = 14;
	public static readonly TO = 15;
	public static readonly FROM = 16;
	public static readonly AT = 17;
	public static readonly AND = 18;
	public static readonly HIGHWAY = 19;
	public static readonly STREET = 20;
	public static readonly BRIDGE = 21;
	public static readonly TIMES = 22;
	public static readonly CREATE = 23;
	public static readonly SEMICOLON = 24;
	public static readonly STOP = 25;
	public static readonly TRAIN = 26;
	public static readonly TRAFFIC = 27;
	public static readonly BUS = 28;
	public static readonly SIGN = 29;
	public static readonly LIGHT = 30;
	public static readonly WATER = 31;
	public static readonly BUILDING = 32;
	public static readonly OUTPUT = 33;
	public static readonly END_OUTPUT = 34;
	public static readonly END_DEFINITION = 35;
	public static readonly LOOP = 36;
	public static readonly END_LOOP = 37;
	public static readonly IF = 38;
	public static readonly ELSE_IF = 39;
	public static readonly ELSE = 40;
	public static readonly THEN = 41;
	public static readonly END_IF = 42;
	public static readonly CANVAS = 43;
	public static readonly SIZE = 44;
	public static readonly BY = 45;
	public static readonly POSITIVE_NUMBER = 46;
	public static readonly NEGATIVE_NUMBER = 47;
	public static readonly TRUE = 48;
	public static readonly FALSE = 49;
	public static readonly OPERATOR = 50;
	public static readonly BUS_STOP = 51;
	public static readonly STOP_SIGN = 52;
	public static readonly TRAFFIC_LIGHT = 53;
	public static readonly TRAIN_STOP = 54;
	public static readonly CANVAS_SIZE = 55;
	public static readonly NAME = 56;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"WS", "LINE_COMMENT", "OPEN_CURLY", "CLOSE_CURLY", "OPEN_PAREN", "CLOSE_PAREN", 
		"COMMA", "CHAIN_OP", "EQ", "COORDINATE", "VARIABLE", "CONSTANT", "FUNCTION", 
		"DEFINITIONS", "TO", "FROM", "AT", "AND", "HIGHWAY", "STREET", "BRIDGE", 
		"TIMES", "CREATE", "SEMICOLON", "STOP", "TRAIN", "TRAFFIC", "BUS", "SIGN", 
		"LIGHT", "WATER", "BUILDING", "OUTPUT", "END_OUTPUT", "END_DEFINITION", 
		"LOOP", "END_LOOP", "IF", "ELSE_IF", "ELSE", "THEN", "END_IF", "CANVAS", 
		"SIZE", "BY", "POSITIVE_NUMBER", "NEGATIVE_NUMBER", "TRUE", "FALSE", "OPERATOR", 
		"BUS_STOP", "STOP_SIGN", "TRAFFIC_LIGHT", "TRAIN_STOP", "CANVAS_SIZE", 
		"NAME",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'{'", "'}'", "'('", "')'", "','", "'.'", 
		"'='", undefined, "'VARIABLE'", "'CONSTANT'", "'FUNCTION'", "'DEFINITIONS'", 
		"'to'", "'from'", "'at'", "'and'", "'highway'", "'street'", "'bridge'", 
		"'TIMES'", "'CREATE'", "';'", "'stop'", "'train'", "'traffic'", "'bus'", 
		"'sign'", "'light'", "'water'", "'building'", "'OUTPUT'", "'END_OUTPUT'", 
		"'END_DEFINITIONS'", "'LOOP'", "'END_LOOP'", "'IF'", "'ELSE_IF'", "'ELSE'", 
		"'THEN'", "'END_IF'", "'CANVAS'", "'SIZE'", "'by'", undefined, undefined, 
		"'true'", "'false'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "LINE_COMMENT", "OPEN_CURLY", "CLOSE_CURLY", "OPEN_PAREN", 
		"CLOSE_PAREN", "COMMA", "CHAIN_OP", "EQ", "COORDINATE", "VARIABLE", "CONSTANT", 
		"FUNCTION", "DEFINITIONS", "TO", "FROM", "AT", "AND", "HIGHWAY", "STREET", 
		"BRIDGE", "TIMES", "CREATE", "SEMICOLON", "STOP", "TRAIN", "TRAFFIC", 
		"BUS", "SIGN", "LIGHT", "WATER", "BUILDING", "OUTPUT", "END_OUTPUT", "END_DEFINITION", 
		"LOOP", "END_LOOP", "IF", "ELSE_IF", "ELSE", "THEN", "END_IF", "CANVAS", 
		"SIZE", "BY", "POSITIVE_NUMBER", "NEGATIVE_NUMBER", "TRUE", "FALSE", "OPERATOR", 
		"BUS_STOP", "STOP_SIGN", "TRAFFIC_LIGHT", "TRAIN_STOP", "CANVAS_SIZE", 
		"NAME",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(MapGeneratorLexer._LITERAL_NAMES, MapGeneratorLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return MapGeneratorLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(MapGeneratorLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "MapGeneratorLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return MapGeneratorLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return MapGeneratorLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return MapGeneratorLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return MapGeneratorLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02:\u01B9\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x03\x02\x06\x02u\n\x02\r" +
		"\x02\x0E\x02v\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03" +
		"\x7F\n\x03\f\x03\x0E\x03\x82\v\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03" +
		"\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03" +
		" \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"" +
		"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03#" +
		"\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03" +
		"$\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03" +
		"&\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(" +
		"\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03+\x03" +
		"+\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03,\x03,\x03-\x03" +
		"-\x03-\x03-\x03-\x03.\x03.\x03.\x03/\x06/\u017E\n/\r/\x0E/\u017F\x030" +
		"\x030\x030\x031\x031\x031\x031\x031\x032\x032\x032\x032\x032\x032\x03" +
		"3\x033\x033\x033\x033\x033\x033\x033\x033\x033\x033\x033\x033\x053\u019D" +
		"\n3\x034\x034\x034\x034\x035\x035\x035\x035\x036\x036\x036\x036\x037\x03" +
		"7\x037\x037\x038\x038\x038\x038\x039\x039\x079\u01B5\n9\f9\x0E9\u01B8" +
		"\v9\x02\x02\x02:\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02" +
		"\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c" +
		"\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:\x03\x02\t\x05\x02\v\f" +
		"\x0F\x0F\"\"\x04\x02\f\f\x0F\x0F\x03\x02z{\x03\x022;\x04\x02>>@@\x04\x02" +
		"C\\c|\x05\x022;C\\c|\x02\u01C2\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02" +
		"\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02" +
		"\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02" +
		"\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02" +
		"\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02" +
		"\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02" +
		"\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+" +
		"\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03" +
		"\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02" +
		"\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02" +
		"o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x03t\x03\x02\x02\x02\x05z\x03\x02" +
		"\x02\x02\x07\x85\x03\x02\x02\x02\t\x87\x03\x02\x02\x02\v\x89\x03\x02\x02" +
		"\x02\r\x8B\x03\x02\x02\x02\x0F\x8D\x03\x02\x02\x02\x11\x8F\x03\x02\x02" +
		"\x02\x13\x91\x03\x02\x02\x02\x15\x93\x03\x02\x02\x02\x17\x95\x03\x02\x02" +
		"\x02\x19\x9E\x03\x02\x02\x02\x1B\xA7\x03\x02\x02\x02\x1D\xB0\x03\x02\x02" +
		"\x02\x1F\xBC\x03\x02\x02\x02!\xBF\x03\x02\x02\x02#\xC4\x03\x02\x02\x02" +
		"%\xC7\x03\x02\x02\x02\'\xCB\x03\x02\x02\x02)\xD3\x03\x02\x02\x02+\xDA" +
		"\x03\x02\x02\x02-\xE1\x03\x02\x02\x02/\xE7\x03\x02\x02\x021\xEE\x03\x02" +
		"\x02\x023\xF0\x03\x02\x02\x025\xF5\x03\x02\x02\x027\xFB\x03\x02\x02\x02" +
		"9\u0103\x03\x02\x02\x02;\u0107\x03\x02\x02\x02=\u010C\x03\x02\x02\x02" +
		"?\u0112\x03\x02\x02\x02A\u0118\x03\x02\x02\x02C\u0121\x03\x02\x02\x02" +
		"E\u0128\x03\x02\x02\x02G\u0133\x03\x02\x02\x02I\u0143\x03\x02\x02\x02" +
		"K\u0148\x03\x02\x02\x02M\u0151\x03\x02\x02\x02O\u0154\x03\x02\x02\x02" +
		"Q\u015C\x03\x02\x02\x02S\u0161\x03\x02\x02\x02U\u0166\x03\x02\x02\x02" +
		"W\u016D\x03\x02\x02\x02Y\u0174\x03\x02\x02\x02[\u0179\x03\x02\x02\x02" +
		"]\u017D\x03\x02\x02\x02_\u0181\x03\x02\x02\x02a\u0184\x03\x02\x02\x02" +
		"c\u0189\x03\x02\x02\x02e\u019C\x03\x02\x02\x02g\u019E\x03\x02\x02\x02" +
		"i\u01A2\x03\x02\x02\x02k\u01A6\x03\x02\x02\x02m\u01AA\x03\x02\x02\x02" +
		"o\u01AE\x03\x02\x02\x02q\u01B2\x03\x02\x02\x02su\t\x02\x02\x02ts\x03\x02" +
		"\x02\x02uv\x03\x02\x02\x02vt\x03\x02\x02\x02vw\x03\x02\x02\x02wx\x03\x02" +
		"\x02\x02xy\b\x02\x02\x02y\x04\x03\x02\x02\x02z{\x071\x02\x02{|\x071\x02" +
		"\x02|\x80\x03\x02\x02\x02}\x7F\n\x03\x02\x02~}\x03\x02\x02\x02\x7F\x82" +
		"\x03\x02\x02\x02\x80~\x03\x02\x02\x02\x80\x81\x03\x02\x02\x02\x81\x83" +
		"\x03\x02\x02\x02\x82\x80\x03\x02\x02\x02\x83\x84\b\x03\x02\x02\x84\x06" +
		"\x03\x02\x02\x02\x85\x86\x07}\x02\x02\x86\b\x03\x02\x02\x02\x87\x88\x07" +
		"\x7F\x02\x02\x88\n\x03\x02\x02\x02\x89\x8A\x07*\x02\x02\x8A\f\x03\x02" +
		"\x02\x02\x8B\x8C\x07+\x02\x02\x8C\x0E\x03\x02\x02\x02\x8D\x8E\x07.\x02" +
		"\x02\x8E\x10\x03\x02\x02\x02\x8F\x90\x070\x02\x02\x90\x12\x03\x02\x02" +
		"\x02\x91\x92\x07?\x02\x02\x92\x14\x03\x02\x02\x02\x93\x94\t\x04\x02\x02" +
		"\x94\x16\x03\x02\x02\x02\x95\x96\x07X\x02\x02\x96\x97\x07C\x02\x02\x97" +
		"\x98\x07T\x02\x02\x98\x99\x07K\x02\x02\x99\x9A\x07C\x02\x02\x9A\x9B\x07" +
		"D\x02\x02\x9B\x9C\x07N\x02\x02\x9C\x9D\x07G\x02\x02\x9D\x18\x03\x02\x02" +
		"\x02\x9E\x9F\x07E\x02\x02\x9F\xA0\x07Q\x02\x02\xA0\xA1\x07P\x02\x02\xA1" +
		"\xA2\x07U\x02\x02\xA2\xA3\x07V\x02\x02\xA3\xA4\x07C\x02\x02\xA4\xA5\x07" +
		"P\x02\x02\xA5\xA6\x07V\x02\x02\xA6\x1A\x03\x02\x02\x02\xA7\xA8\x07H\x02" +
		"\x02\xA8\xA9\x07W\x02\x02\xA9\xAA\x07P\x02\x02\xAA\xAB\x07E\x02\x02\xAB" +
		"\xAC\x07V\x02\x02\xAC\xAD\x07K\x02\x02\xAD\xAE\x07Q\x02\x02\xAE\xAF\x07" +
		"P\x02\x02\xAF\x1C\x03\x02\x02\x02\xB0\xB1\x07F\x02\x02\xB1\xB2\x07G\x02" +
		"\x02\xB2\xB3\x07H\x02\x02\xB3\xB4\x07K\x02\x02\xB4\xB5\x07P\x02\x02\xB5" +
		"\xB6\x07K\x02\x02\xB6\xB7\x07V\x02\x02\xB7\xB8\x07K\x02\x02\xB8\xB9\x07" +
		"Q\x02\x02\xB9\xBA\x07P\x02\x02\xBA\xBB\x07U\x02\x02\xBB\x1E\x03\x02\x02" +
		"\x02\xBC\xBD\x07v\x02\x02\xBD\xBE\x07q\x02\x02\xBE \x03\x02\x02\x02\xBF" +
		"\xC0\x07h\x02\x02\xC0\xC1\x07t\x02\x02\xC1\xC2\x07q\x02\x02\xC2\xC3\x07" +
		"o\x02\x02\xC3\"\x03\x02\x02\x02\xC4\xC5\x07c\x02\x02\xC5\xC6\x07v\x02" +
		"\x02\xC6$\x03\x02\x02\x02\xC7\xC8\x07c\x02\x02\xC8\xC9\x07p\x02\x02\xC9" +
		"\xCA\x07f\x02\x02\xCA&\x03\x02\x02\x02\xCB\xCC\x07j\x02\x02\xCC\xCD\x07" +
		"k\x02\x02\xCD\xCE\x07i\x02\x02\xCE\xCF\x07j\x02\x02\xCF\xD0\x07y\x02\x02" +
		"\xD0\xD1\x07c\x02\x02\xD1\xD2\x07{\x02\x02\xD2(\x03\x02\x02\x02\xD3\xD4" +
		"\x07u\x02\x02\xD4\xD5\x07v\x02\x02\xD5\xD6\x07t\x02\x02\xD6\xD7\x07g\x02" +
		"\x02\xD7\xD8\x07g\x02\x02\xD8\xD9\x07v\x02\x02\xD9*\x03\x02\x02\x02\xDA" +
		"\xDB\x07d\x02\x02\xDB\xDC\x07t\x02\x02\xDC\xDD\x07k\x02\x02\xDD\xDE\x07" +
		"f\x02\x02\xDE\xDF\x07i\x02\x02\xDF\xE0\x07g\x02\x02\xE0,\x03\x02\x02\x02" +
		"\xE1\xE2\x07V\x02\x02\xE2\xE3\x07K\x02\x02\xE3\xE4\x07O\x02\x02\xE4\xE5" +
		"\x07G\x02\x02\xE5\xE6\x07U\x02\x02\xE6.\x03\x02\x02\x02\xE7\xE8\x07E\x02" +
		"\x02\xE8\xE9\x07T\x02\x02\xE9\xEA\x07G\x02\x02\xEA\xEB\x07C\x02\x02\xEB" +
		"\xEC\x07V\x02\x02\xEC\xED\x07G\x02\x02\xED0\x03\x02\x02\x02\xEE\xEF\x07" +
		"=\x02\x02\xEF2\x03\x02\x02\x02\xF0\xF1\x07u\x02\x02\xF1\xF2\x07v\x02\x02" +
		"\xF2\xF3\x07q\x02\x02\xF3\xF4\x07r\x02\x02\xF44\x03\x02\x02\x02\xF5\xF6" +
		"\x07v\x02\x02\xF6\xF7\x07t\x02\x02\xF7\xF8\x07c\x02\x02\xF8\xF9\x07k\x02" +
		"\x02\xF9\xFA\x07p\x02\x02\xFA6\x03\x02\x02\x02\xFB\xFC\x07v\x02\x02\xFC" +
		"\xFD\x07t\x02\x02\xFD\xFE\x07c\x02\x02\xFE\xFF\x07h\x02\x02\xFF\u0100" +
		"\x07h\x02\x02\u0100\u0101\x07k\x02\x02\u0101\u0102\x07e\x02\x02\u0102" +
		"8\x03\x02\x02\x02\u0103\u0104\x07d\x02\x02\u0104\u0105\x07w\x02\x02\u0105" +
		"\u0106\x07u\x02\x02\u0106:\x03\x02\x02\x02\u0107\u0108\x07u\x02\x02\u0108" +
		"\u0109\x07k\x02\x02\u0109\u010A\x07i\x02\x02\u010A\u010B\x07p\x02\x02" +
		"\u010B<\x03\x02\x02\x02\u010C\u010D\x07n\x02\x02\u010D\u010E\x07k\x02" +
		"\x02\u010E\u010F\x07i\x02\x02\u010F\u0110\x07j\x02\x02\u0110\u0111\x07" +
		"v\x02\x02\u0111>\x03\x02\x02\x02\u0112\u0113\x07y\x02\x02\u0113\u0114" +
		"\x07c\x02\x02\u0114\u0115\x07v\x02\x02\u0115\u0116\x07g\x02\x02\u0116" +
		"\u0117\x07t\x02\x02\u0117@\x03\x02\x02\x02\u0118\u0119\x07d\x02\x02\u0119" +
		"\u011A\x07w\x02\x02\u011A\u011B\x07k\x02\x02\u011B\u011C\x07n\x02\x02" +
		"\u011C\u011D\x07f\x02\x02\u011D\u011E\x07k\x02\x02\u011E\u011F\x07p\x02" +
		"\x02\u011F\u0120\x07i\x02\x02\u0120B\x03\x02\x02\x02\u0121\u0122\x07Q" +
		"\x02\x02\u0122\u0123\x07W\x02\x02\u0123\u0124\x07V\x02\x02\u0124\u0125" +
		"\x07R\x02\x02\u0125\u0126\x07W\x02\x02\u0126\u0127\x07V\x02\x02\u0127" +
		"D\x03\x02\x02\x02\u0128\u0129\x07G\x02\x02\u0129\u012A\x07P\x02\x02\u012A" +
		"\u012B\x07F\x02\x02\u012B\u012C\x07a\x02\x02\u012C\u012D\x07Q\x02\x02" +
		"\u012D\u012E\x07W\x02\x02\u012E\u012F\x07V\x02\x02\u012F\u0130\x07R\x02" +
		"\x02\u0130\u0131\x07W\x02\x02\u0131\u0132\x07V\x02\x02\u0132F\x03\x02" +
		"\x02\x02\u0133\u0134\x07G\x02\x02\u0134\u0135\x07P\x02\x02\u0135\u0136" +
		"\x07F\x02\x02\u0136\u0137\x07a\x02\x02\u0137\u0138\x07F\x02\x02\u0138" +
		"\u0139\x07G\x02\x02\u0139\u013A\x07H\x02\x02\u013A\u013B\x07K\x02\x02" +
		"\u013B\u013C\x07P\x02\x02\u013C\u013D\x07K\x02\x02\u013D\u013E\x07V\x02" +
		"\x02\u013E\u013F\x07K\x02\x02\u013F\u0140\x07Q\x02\x02\u0140\u0141\x07" +
		"P\x02\x02\u0141\u0142\x07U\x02\x02\u0142H\x03\x02\x02\x02\u0143\u0144" +
		"\x07N\x02\x02\u0144\u0145\x07Q\x02\x02\u0145\u0146\x07Q\x02\x02\u0146" +
		"\u0147\x07R\x02\x02\u0147J\x03\x02\x02\x02\u0148\u0149\x07G\x02\x02\u0149" +
		"\u014A\x07P\x02\x02\u014A\u014B\x07F\x02\x02\u014B\u014C\x07a\x02\x02" +
		"\u014C\u014D\x07N\x02\x02\u014D\u014E\x07Q\x02\x02\u014E\u014F\x07Q\x02" +
		"\x02\u014F\u0150\x07R\x02\x02\u0150L\x03\x02\x02\x02\u0151\u0152\x07K" +
		"\x02\x02\u0152\u0153\x07H\x02\x02\u0153N\x03\x02\x02\x02\u0154\u0155\x07" +
		"G\x02\x02\u0155\u0156\x07N\x02\x02\u0156\u0157\x07U\x02\x02\u0157\u0158" +
		"\x07G\x02\x02\u0158\u0159\x07a\x02\x02\u0159\u015A\x07K\x02\x02\u015A" +
		"\u015B\x07H\x02\x02\u015BP\x03\x02\x02\x02\u015C\u015D\x07G\x02\x02\u015D" +
		"\u015E\x07N\x02\x02\u015E\u015F\x07U\x02\x02\u015F\u0160\x07G\x02\x02" +
		"\u0160R\x03\x02\x02\x02\u0161\u0162\x07V\x02\x02\u0162\u0163\x07J\x02" +
		"\x02\u0163\u0164\x07G\x02\x02\u0164\u0165\x07P\x02\x02\u0165T\x03\x02" +
		"\x02\x02\u0166\u0167\x07G\x02\x02\u0167\u0168\x07P\x02\x02\u0168\u0169" +
		"\x07F\x02\x02\u0169\u016A\x07a\x02\x02\u016A\u016B\x07K\x02\x02\u016B" +
		"\u016C\x07H\x02\x02\u016CV\x03\x02\x02\x02\u016D\u016E\x07E\x02\x02\u016E" +
		"\u016F\x07C\x02\x02\u016F\u0170\x07P\x02\x02\u0170\u0171\x07X\x02\x02" +
		"\u0171\u0172\x07C\x02\x02\u0172\u0173\x07U\x02\x02\u0173X\x03\x02\x02" +
		"\x02\u0174\u0175\x07U\x02\x02\u0175\u0176\x07K\x02\x02\u0176\u0177\x07" +
		"\\\x02\x02\u0177\u0178\x07G\x02\x02\u0178Z\x03\x02\x02\x02\u0179\u017A" +
		"\x07d\x02\x02\u017A\u017B\x07{\x02\x02\u017B\\\x03\x02\x02\x02\u017C\u017E" +
		"\t\x05\x02\x02\u017D\u017C\x03\x02\x02\x02\u017E\u017F\x03\x02\x02\x02" +
		"\u017F\u017D\x03\x02\x02\x02\u017F\u0180\x03\x02\x02\x02\u0180^\x03\x02" +
		"\x02\x02\u0181\u0182\x07/\x02\x02\u0182\u0183\x05]/\x02\u0183`\x03\x02" +
		"\x02\x02\u0184\u0185\x07v\x02\x02\u0185\u0186\x07t\x02\x02\u0186\u0187" +
		"\x07w\x02\x02\u0187\u0188\x07g\x02\x02\u0188b\x03\x02\x02\x02\u0189\u018A" +
		"\x07h\x02\x02\u018A\u018B\x07c\x02\x02\u018B\u018C\x07n\x02\x02\u018C" +
		"\u018D\x07u\x02\x02\u018D\u018E\x07g\x02\x02\u018Ed\x03\x02\x02\x02\u018F" +
		"\u019D\x04,1\x02\u0190\u0191\x07?\x02\x02\u0191\u019D\x07?\x02\x02\u0192" +
		"\u019D\t\x06\x02\x02\u0193\u0194\x07@\x02\x02\u0194\u019D\x07?\x02\x02" +
		"\u0195\u0196\x07>\x02\x02\u0196\u019D\x07?\x02\x02\u0197\u0198\x07C\x02" +
		"\x02\u0198\u0199\x07P\x02\x02\u0199\u019D\x07F\x02\x02\u019A\u019B\x07" +
		"Q\x02\x02\u019B\u019D\x07T\x02\x02\u019C\u018F\x03\x02\x02\x02\u019C\u0190" +
		"\x03\x02\x02\x02\u019C\u0192\x03\x02\x02\x02\u019C\u0193\x03\x02\x02\x02" +
		"\u019C\u0195\x03\x02\x02\x02\u019C\u0197\x03\x02\x02\x02\u019C\u019A\x03" +
		"\x02\x02\x02\u019Df\x03\x02\x02\x02\u019E\u019F\x059\x1D\x02\u019F\u01A0" +
		"\x05\x03\x02\x02\u01A0\u01A1\x053\x1A\x02\u01A1h\x03\x02\x02\x02\u01A2" +
		"\u01A3\x053\x1A\x02\u01A3\u01A4\x05\x03\x02\x02\u01A4\u01A5\x05;\x1E\x02" +
		"\u01A5j\x03\x02\x02\x02\u01A6\u01A7\x057\x1C\x02\u01A7\u01A8\x05\x03\x02" +
		"\x02\u01A8\u01A9\x05=\x1F\x02\u01A9l\x03\x02\x02\x02\u01AA\u01AB\x055" +
		"\x1B\x02\u01AB\u01AC\x05\x03\x02\x02\u01AC\u01AD\x053\x1A\x02\u01ADn\x03" +
		"\x02\x02\x02\u01AE\u01AF\x05W,\x02\u01AF\u01B0\x05\x03\x02\x02\u01B0\u01B1" +
		"\x05Y-\x02\u01B1p\x03\x02\x02\x02\u01B2\u01B6\t\x07\x02\x02\u01B3\u01B5" +
		"\t\b\x02\x02\u01B4\u01B3\x03\x02\x02\x02\u01B5\u01B8\x03\x02\x02\x02\u01B6" +
		"\u01B4\x03\x02\x02\x02\u01B6\u01B7\x03\x02\x02\x02\u01B7r\x03\x02\x02" +
		"\x02\u01B8\u01B6\x03\x02\x02\x02\b\x02v\x80\u017F\u019C\u01B6\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MapGeneratorLexer.__ATN) {
			MapGeneratorLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(MapGeneratorLexer._serializedATN));
		}

		return MapGeneratorLexer.__ATN;
	}

}

